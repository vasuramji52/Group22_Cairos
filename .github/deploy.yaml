- name: Deploy to Droplet
  env:
    SSH_HOST: ${{ secrets.SSH_HOST }}
    SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
    SSH_KEY: ${{ secrets.SSH_KEY }}
  run: |
    set -e
    sshpass -p "$SSH_KEY" ssh -o StrictHostKeyChecking=no "$SSH_USERNAME@$SSH_HOST" << 'EOF'
    set -e

    echo "ðŸš€ Deploying..."

    # --- Git safe.directory fixes (avoid dubious ownership) ---
    git config --global --add safe.directory /var/www/html/Group22_PurpleProject
    git config --global --add safe.directory /var/cardsServer/api
    git config --global --add safe.directory /var/cardsServer

    # Optional: align ownership to current user to avoid future warnings
    chown -R "$USER":"$USER" /var/www/html/Group22_PurpleProject || true
    chown -R "$USER":"$USER" /var/cardsServer || true

    ############################
    # FRONTEND
    ############################
    cd /var/www/html/Group22_PurpleProject/frontend
    git fetch origin
    git reset --hard origin/main
    npm ci
    npm run build

    # Safe publish
    rm -rf /var/www/html/assets
    cp -f dist/index.html /var/www/html/index.html
    cp -f dist/vite.svg   /var/www/html/vite.svg 2>/dev/null || true
    cp -r dist/assets     /var/www/html/assets
    chown -R www-data:www-data /var/www/html
    nginx -t && systemctl reload nginx

    ############################
    # BACKEND
    ############################
    if [ -d /var/cardsServer/api/backend ]; then
      cd /var/cardsServer/api/backend
    else
      cd /var/cardsServer/backend
    fi
    git fetch origin
    git reset --hard origin/main
    npm ci
    pm2 restart express-server || pm2 start server.js --name "express-server"
    pm2 save

    echo "âœ… Deployment complete."
    EOF
